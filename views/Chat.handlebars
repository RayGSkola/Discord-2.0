<div class="chat-container">
 <aside class="sidebar">
  <h2>Friends</h2>
  <div class="friend-request">
    <form id="friendRequestForm" action="/api/friends/request" method="POST">
      <input type="hidden" name="sender_Username" value="{{currentUsername}}" />
      <input id="friendUsernameInput" type="text" name="receiver_username" placeholder="Ange anv칛ndarnamn" required />
      <button type="button" id="sendFriendRequestBtn">Skicka v칛nf칬rfr친gan</button>
    </form>
    <div id="friendRequestMessage"></div>
  </div>

 <ul id="friendList">
  <!-- V칛nlistan fylls med JavaScript -->
</ul>


  <!-- L칛gg till denna del f칬r v칛ntande v칛nf칬rfr친gningar -->
  <div class="friend-requests-section" style="margin-top: 20px;">
    <h3>V칛ntande v칛nf칬rfr친gningar</h3>
    <div id="pendingRequestsContainer"></div>
  </div>
</aside>

  <main class="chat-window">
    <header class="chat-header">
      <h2>Chat with <span id="current-chat">User 1</span></h2>
    </header>

    <div id="chat-container">
      <div id="chat-box" style="height: 400px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px;">
        <!-- Messages appear here -->
      </div>
      <div class="chat-input">
        <input type="text" id="chatMessage" placeholder="Type a message..." style="width: 70%; padding: 10px; border-radius: 8px;">
        <button id="sendButton">Send</button>
      </div>
    </div>
  </main>
</div>

<script> const currentUsername = "{{currentUsername}}";  // Injectad fr친n servern</script>

<script src="/socket.io/socket.io.js"></script>
<script src="/chat.js"></script>

<script>

  // ===== Skicka v칛nf칬rfr친gan =====
  document.getElementById('sendFriendRequestBtn').addEventListener('click', async (e) => {
    e.preventDefault();
    const receiverUsername = document.getElementById('friendUsernameInput').value.trim();
    const messageElem = document.getElementById('friendRequestMessage');

    if (!receiverUsername) {
      messageElem.textContent = "Ange ett anv칛ndarnamn!";
      messageElem.style.color = 'red';
      return;
    }

    try {
      const response = await fetch('/api/friends/request', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ receiver_username: receiverUsername }),
      });

      const data = await response.json();

      if (response.ok) {
        messageElem.textContent = data.message;
        messageElem.style.color = 'green';
        document.getElementById('friendUsernameInput').value = '';
        await fetchFriendList(); // Uppdatera v칛nlista direkt
      } else {
        messageElem.textContent = data.message || 'Fel vid f칬rfr친gan';
        messageElem.style.color = 'red';
      }
    } catch (error) {
      messageElem.textContent = "Fel vid kommunikation med servern.";
      messageElem.style.color = 'red';
      console.error(error);
    }
  });

  // ===== H칛mta v칛nf칬rfr친gningar (pending) =====
  async function fetchPendingRequests() {
    try {
      const response = await fetch(`/api/friends/pending/${currentUsername}`);
      if (!response.ok) throw new Error("Misslyckades h칛mta v칛nf칬rfr친gningar");
      const pendingRequests = await response.json();

      const container = document.getElementById('pendingRequestsContainer');
      container.innerHTML = '';

      if (pendingRequests.length === 0) {
        container.textContent = "Inga v칛ntande v칛nf칬rfr친gningar";
        return;
      }

      pendingRequests.forEach(request => {
        const requestDiv = document.createElement('div');
        requestDiv.classList.add('friend-request-item');
        requestDiv.textContent = `V칛nf칬rfr친gan fr친n ${request.sender_Username}`;

        const acceptBtn = document.createElement('button');
        acceptBtn.textContent = 'Acceptera';
        acceptBtn.onclick = async () => {
          try {
            const res = await fetch('/api/friends/accept', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({
                sender_Username: request.sender_Username,
                receiver_username: currentUsername
              })
            });

            if (!res.ok) throw new Error('Kunde inte acceptera v칛nf칬rfr친gan');

            alert('V칛nf칬rfr친gan accepterad!');
            await fetchPendingRequests();
            await fetchFriendList(); // Uppdatera v칛nlistan ocks친
          } catch (err) {
            alert(err.message);
          }
        };

        requestDiv.appendChild(acceptBtn);
        container.appendChild(requestDiv);
      });
    } catch (error) {
      console.error(error);
    }
  }

  // ===== H칛mta v칛nlistan =====
  async function fetchFriendList() {
    try {
      const response = await fetch(`/api/friends/list/${currentUsername}`);
      if (!response.ok) throw new Error("Kunde inte h칛mta v칛nlista");
      const friends = await response.json();

      const list = document.getElementById('friendList');
      list.innerHTML = '';

      if (friends.length === 0) {
        list.innerHTML = '<li>Inga v칛nner 칛nnu</li>';
        return;
      }

      friends.forEach(friend => {
        const li = document.createElement('li');
        const a = document.createElement('a');
        a.href = "#";
        a.className = "friend-link";
        a.textContent = friend;
        li.appendChild(a);
        list.appendChild(li);
      });

      addFriendClickListeners();
    } catch (error) {
      console.error("Fel vid laddning av v칛nlista:", error);
    }
  }

  // ===== Klicka p친 v칛nnamn f칬r att byta aktiv chatt =====
  function addFriendClickListeners() {
  const friendLinks = document.querySelectorAll(".friend-link");
  const currentChatElem = document.getElementById("current-chat");

  friendLinks.forEach(link => {
    link.addEventListener("click", (e) => {
      e.preventDefault();
      const friendName = e.target.textContent;
      currentChatElem.textContent = friendName;
      currentReceiver = friendName;
      console.log("Selected chat with:", currentReceiver);
      loadChatHistory(friendName);  // 游릭 Laddar historiken!
    });
  });
}


  // ===== Initiera n칛r sidan laddats =====
  document.addEventListener('DOMContentLoaded', () => {
    fetchPendingRequests();
    fetchFriendList();
  });
</script>
